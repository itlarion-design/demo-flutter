name: Android Fastlane

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  internal:
    name: Build & Upload Internal
    runs-on: ubuntu-latest

    env:
      BUNDLE_GEMFILE: ${{ github.workspace }}/Gemfile
      FASTLANE_SKIP_UPDATE_CHECK: "1"
      RUBYOPT: "-W:no-deprecated -W:no-experimental"
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.PLAY_SERVICE_ACCOUNT_JSON }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
          cache: gradle

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      - name: Install Android SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          mkdir -p $HOME/android-sdk/cmdline-tools
          unzip -qq cmdline-tools.zip -d $HOME/android-sdk/cmdline-tools
          mv $HOME/android-sdk/cmdline-tools/cmdline-tools $HOME/android-sdk/cmdline-tools/latest
          export ANDROID_HOME=$HOME/android-sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "platforms;android-34" "build-tools;34.0.0" "ndk;25.2.9519653"

      - name: Check internet connection
        run: curl -I https://pub.dev

      - name: Clean Flutter/Gradle cache
        run: |
          flutter clean
          rm -rf ~/.pub-cache
          rm -rf ~/.gradle

      - name: Patch plugin build.gradle for AGP 8+
        run: |
          PLUGIN_PATH=$(find $HOME/.pub-cache/hosted/pub.dev/ -type d -name 'flutter_storage_path-*' | head -n 1)
          BUILD_GRADLE="$PLUGIN_PATH/android/build.gradle"
          if [ -f "$BUILD_GRADLE" ]; then
            if ! grep -q "namespace " "$BUILD_GRADLE"; then
              sed -i '/android {/a \    namespace "com.example.flutter_storage_path"' "$BUILD_GRADLE"
              echo "Patched namespace in $BUILD_GRADLE"
            fi
          else
            echo "No flutter_storage_path plugin build.gradle found!"
          fi

      - name: Create Google Play credentials
        if: ${{ env.PLAY_SERVICE_ACCOUNT_JSON != '' }}
        run: |
          mkdir -p android/fastlane
          echo "$PLAY_SERVICE_ACCOUNT_JSON" > android/fastlane/service-account.json

      - name: Prepare keystore (optional)
        if: ${{ env.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          mkdir -p android/app
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > android/app/upload-keystore.jks
          cat > android/key.properties <<EOF
          storePassword=${ANDROID_KEYSTORE_PASSWORD}
          keyPassword=${ANDROID_KEY_PASSWORD}
          keyAlias=${ANDROID_KEY_ALIAS}
          storeFile=upload-keystore.jks
          EOF

      - name: Build & Upload to Internal
        working-directory: android
        run: |
          timeout 900s bundle exec fastlane android internal
